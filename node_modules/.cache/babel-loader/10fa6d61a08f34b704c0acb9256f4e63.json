{"ast":null,"code":"var _jsxFileName = \"/Users/tarun/Documents/striveschool/Team-Build-2-main/linkedin/src/components/Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport Addexperience from \"./Addexperience\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { fetchExperience } from \"../functions/fetches\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modalbox = props => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [experience, setExperience] = useState({});\n  useEffect(async () => {\n    //console.log(\"useEffect: \", props.experience)\n    if (props.experience) {\n      let data = await fetchExperience(props.experience.user, props.experience._id);\n      setExperience(data); //console.log(\"props.experience is: \", props.experience)\n      //console.log(\"data is: \", data)\n    }\n  }, []);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const deleteExperience = async () => {\n    console.log(props.experience.user, props.experience._id);\n\n    try {\n      const response = await fetch(`https://striveschool-api.herokuapp.com/api/profile/${props.experience.user}/experiences/${props.experience._id}`, {\n        method: 'DELETE',\n        headers: {\n          \"Authorization\": `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM2MzlmNjdiZTZjMTAwMTVmOWRiZDQiLCJpYXQiOjE2MzA5NDM3MzUsImV4cCI6MTYzMjE1MzMzNX0.aqatGQ0--T-ZQWZJQeYBJ0q7JsbxuWlScmsooaM_1ZE`\n        }\n      });\n\n      if (response.ok) {\n        alert(\"Experience deleted successfully\");\n        handleClose();\n      } else {\n        console.log(response);\n        alert(\"There is some problem\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"eduIconColor\",\n      className: \"align-self-center mt-4 mr-3 d-block\",\n      onClick: handleShow,\n      children: props.isEdit ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      backdrop: \"static\",\n      keyboard: false,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: props.isEdit ? \"Edit Experience\" : \"Add Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Addexperience, {\n          experience: props.experience,\n          isEdit: props.isEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), props.isEdit && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: deleteExperience,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Modalbox, \"lr6ZxqxQ5gVRCtqsZHsr59o3jdQ=\");\n\n_c = Modalbox;\nexport default Modalbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modalbox\");","map":{"version":3,"sources":["/Users/tarun/Documents/striveschool/Team-Build-2-main/linkedin/src/components/Modal.jsx"],"names":["Addexperience","Modal","Button","useState","useEffect","fetchExperience","Modalbox","props","show","setShow","experience","setExperience","data","user","_id","handleClose","handleShow","deleteExperience","console","log","response","fetch","method","headers","ok","alert","err","error","isEdit"],"mappings":"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","sourcesContent":["import Addexperience from \"./Addexperience\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { fetchExperience } from \"../functions/fetches\";\n\nconst Modalbox = (props) => {\n  const [show, setShow] = useState(false);\n  const [experience, setExperience] = useState({})\n\n  useEffect(async () => {\n    //console.log(\"useEffect: \", props.experience)\n    if (props.experience) {\n      let data = await fetchExperience(props.experience.user, props.experience._id)\n      setExperience(data)\n      //console.log(\"props.experience is: \", props.experience)\n      //console.log(\"data is: \", data)\n    }\n  }, [])\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n\n  const deleteExperience = async () => {\n    console.log(props.experience.user, props.experience._id)\n    try {\n        const response = await fetch(`https://striveschool-api.herokuapp.com/api/profile/${props.experience.user}/experiences/${props.experience._id}`, {\n            method: 'DELETE',\n            headers: {\n                \"Authorization\": `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM2MzlmNjdiZTZjMTAwMTVmOWRiZDQiLCJpYXQiOjE2MzA5NDM3MzUsImV4cCI6MTYzMjE1MzMzNX0.aqatGQ0--T-ZQWZJQeYBJ0q7JsbxuWlScmsooaM_1ZE`\n            }\n        })\n        if(response.ok) {\n            alert(\"Experience deleted successfully\")\n            handleClose()\n        } else {\n            console.log(response)\n            alert(\"There is some problem\")\n        }\n    } catch (err) {\n        console.error(err)\n    }\n  }\n\n  return (\n    <>\n      <div\n        id=\"eduIconColor\"\n        className=\"align-self-center mt-4 mr-3 d-block\"\n        onClick={handleShow}\n      >\n        {props.isEdit ? <i className=\"fas fa-pen\"></i> : <i className=\"fas fa-plus\"></i>}\n      </div>\n      \n      {/* <Button variant=\"primary\" onClick={handleShow}>\n        +\n      </Button> */}\n\n      <Modal\n        show={show}\n        onHide={handleClose}\n        backdrop=\"static\"\n        keyboard={false}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title>{props.isEdit ? \"Edit Experience\" : \"Add Experience\"}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Addexperience experience={props.experience} isEdit={props.isEdit}/>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          {props.isEdit && <Button variant=\"danger\" onClick={deleteExperience}>Delete</Button>}\n          {/*<Button variant=\"danger\" onClick = {(e)=>deleteExperience(e,user,experience)}>Delete</Button>*/}\n\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\nexport default Modalbox;\n"]},"metadata":{},"sourceType":"module"}