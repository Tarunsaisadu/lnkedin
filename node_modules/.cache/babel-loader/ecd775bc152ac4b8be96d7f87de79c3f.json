{"ast":null,"code":"var _jsxFileName = \"/Users/tarun/Documents/striveschool/Team-Build-2-main/linkedin/src/components/Addexperience.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Addexperience = props => {\n  _s();\n\n  const defaultExperience = {\n    role: \"\",\n    company: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    description: \"\",\n    area: \"\"\n  };\n  const [experience, setExperience] = useState(defaultExperience);\n  const propExperience = props.experience;\n  const isEdit = props.isEdit;\n  useEffect(() => {\n    if (isEdit) {\n      let propsExperience = {\n        role: propExperience.role,\n        company: propExperience.company,\n        startDate: propExperience.startDate,\n        endDate: propExperience.endDate,\n        description: propExperience.description,\n        area: propExperience.area\n      };\n      setExperience(propExperience);\n    }\n  }, []);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (isEdit) {\n      try {\n        const response = await fetch(\" https://striveschool-api.herokuapp.com/api/profile/\" + propExperience.user + \"/experiences/\" + propExperience._id, {\n          method: \"PUT\",\n          body: JSON.stringify(experience),\n          headers: {\n            \"content-Type\": \"application/json\",\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM2MzlmNjdiZTZjMTAwMTVmOWRiZDQiLCJpYXQiOjE2MzA5NDM3MzUsImV4cCI6MTYzMjE1MzMzNX0.aqatGQ0--T-ZQWZJQeYBJ0q7JsbxuWlScmsooaM_1ZE\"\n          }\n        });\n\n        if (response.ok) {\n          console.log(experience);\n          alert(\"experience is edited\");\n        } else {\n          console.log(propExperience.user);\n          console.log(response.url);\n          alert(\"not saved correctly\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setExperience({\n        role: \"\",\n        company: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        description: \"\",\n        area: \"\"\n      });\n    } else {\n      try {\n        const response = await fetch(\" https://striveschool-api.herokuapp.com/api/profile/\" + propExperience.user + \"/experiences/\" + propExperience._id, {\n          method: \"POST\",\n          body: JSON.stringify(experience),\n          headers: {\n            \"content-Type\": \"application/json\",\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM2MzlmNjdiZTZjMTAwMTVmOWRiZDQiLCJpYXQiOjE2MzA5NDM3MzUsImV4cCI6MTYzMjE1MzMzNX0.aqatGQ0--T-ZQWZJQeYBJ0q7JsbxuWlScmsooaM_1ZE\"\n          }\n        });\n\n        if (response.ok) {\n          console.log(experience);\n          alert(\"experience is added\");\n        } else {\n          console.log(response.url);\n          alert(\"not saved correctly\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n\n      setExperience({\n        role: \"\",\n        company: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        description: \"\",\n        area: \"\"\n      });\n    }\n  }; // useEffect(() => {}, []);\n\n\n  console.log(experience);\n\n  const handleInput = (e, propertyName) => {\n    setExperience({ ...experience,\n      [propertyName]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            lg: 3,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Role\",\n              value: experience.role,\n              onChange: e => handleInput(e, \"role\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            lg: 3,\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Company\",\n              value: experience.company,\n              onChange: e => handleInput(e, \"company\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            lg: 3,\n            children: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              placeholder: \"yyyy-mm-dd\",\n              value: experience.startDate,\n              onChange: e => handleInput(e, \"startDate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            lg: 3,\n            children: \"End date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              placeholder: \"yyyy-mm-dd\",\n              value: experience.endDate,\n              onChange: e => handleInput(e, \"endDate\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            lg: 3,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Job description\",\n              value: experience.description,\n              onChange: e => handleInput(e, \"description\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            column: true,\n            lg: 3,\n            children: \"Area\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Location\",\n              value: experience.area,\n              onChange: e => handleInput(e, \"area\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mt-3\",\n          children: isEdit ? \"Save Changes\" : \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Addexperience, \"SCLb4a0uHecnFva2ndVOGyDNlSs=\");\n\n_c = Addexperience;\nexport default Addexperience;\n\nvar _c;\n\n$RefreshReg$(_c, \"Addexperience\");","map":{"version":3,"sources":["/Users/tarun/Documents/striveschool/Team-Build-2-main/linkedin/src/components/Addexperience.jsx"],"names":["React","useEffect","useState","Form","Col","Button","Addexperience","props","defaultExperience","role","company","startDate","endDate","description","area","experience","setExperience","propExperience","isEdit","propsExperience","handleSubmit","e","preventDefault","response","fetch","user","_id","method","body","JSON","stringify","headers","Authorization","ok","console","log","alert","url","error","handleInput","propertyName","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\n\nconst Addexperience = (props) => {\n  const defaultExperience = {\n    role: \"\",\n    company: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    description: \"\",\n    area: \"\",\n  }\n  const [experience, setExperience] = useState(defaultExperience);\n\n  const propExperience = props.experience\n  const isEdit = props.isEdit\n\n  useEffect(() => {\n    if (isEdit) {\n      let propsExperience = {\n        role: propExperience.role,\n        company: propExperience.company,\n        startDate: propExperience.startDate,\n        endDate: propExperience.endDate,\n        description: propExperience.description,\n        area: propExperience.area,\n      }\n  \n      setExperience(propExperience)\n    }\n  }, [])\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (isEdit) {\n      try {\n        const response = await fetch(\n          \" https://striveschool-api.herokuapp.com/api/profile/\" +\n            propExperience.user +\n            \"/experiences/\" + propExperience._id,\n          {\n            method: \"PUT\",\n            body: JSON.stringify(experience),\n            headers: {\n              \"content-Type\": \"application/json\",\n              Authorization:\n                \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM2MzlmNjdiZTZjMTAwMTVmOWRiZDQiLCJpYXQiOjE2MzA5NDM3MzUsImV4cCI6MTYzMjE1MzMzNX0.aqatGQ0--T-ZQWZJQeYBJ0q7JsbxuWlScmsooaM_1ZE\",\n            },\n          }\n        );\n        if (response.ok) {\n          console.log(experience);\n          alert(\"experience is edited\");\n        } else {\n          console.log(propExperience.user)\n          console.log(response.url)\n          alert(\"not saved correctly\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      setExperience({\n        role: \"\",\n        company: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        description: \"\",\n        area: \"\",\n      });\n    } else {\n      try {\n        const response = await fetch(\n          \" https://striveschool-api.herokuapp.com/api/profile/\" +\n            propExperience.user +\n            \"/experiences/\" + propExperience._id,\n          {\n            method: \"POST\",\n            body: JSON.stringify(experience),\n            headers: {\n              \"content-Type\": \"application/json\",\n              Authorization:\n                \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTM2MzlmNjdiZTZjMTAwMTVmOWRiZDQiLCJpYXQiOjE2MzA5NDM3MzUsImV4cCI6MTYzMjE1MzMzNX0.aqatGQ0--T-ZQWZJQeYBJ0q7JsbxuWlScmsooaM_1ZE\",\n            },\n          }\n        );\n        if (response.ok) {\n          console.log(experience);\n          alert(\"experience is added\");\n        } else {\n          console.log(response.url)\n          alert(\"not saved correctly\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      setExperience({\n        role: \"\",\n        company: \"\",\n        startDate: \"\",\n        endDate: \"\",\n        description: \"\",\n        area: \"\",\n      });\n    }\n  };\n\n  // useEffect(() => {}, []);\n  console.log(experience);\n\n  const handleInput = (e, propertyName) => {\n    setExperience({\n      ...experience,\n      [propertyName]: e.target.value,\n    });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Row>\n            <Form.Label column lg={3}>\n              Title\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Role\"\n                value={experience.role}\n                onChange={(e) => handleInput(e, \"role\")}\n              />\n            </Col>\n          </Form.Row>\n          <br />\n          <Form.Row>\n            <Form.Label column lg={3}>\n              Company\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Company\"\n                value={experience.company}\n                onChange={(e) => handleInput(e, \"company\")}\n              />\n            </Col>\n          </Form.Row>\n\n          <br />\n          <Form.Row>\n            <Form.Label column lg={3}>\n              Start date\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"yyyy-mm-dd\"\n                value={experience.startDate}\n                onChange={(e) => handleInput(e, \"startDate\")}\n              />\n            </Col>\n          </Form.Row>\n          <br />\n          <Form.Row>\n            <Form.Label column lg={3}>\n              End date\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"date\"\n                placeholder=\"yyyy-mm-dd\"\n                value={experience.endDate}\n                onChange={(e) => handleInput(e, \"endDate\")}\n              />\n            </Col>\n          </Form.Row>\n          <br />\n          <Form.Row>\n            <Form.Label column lg={3}>\n              Description\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Job description\"\n                value={experience.description}\n                onChange={(e) => handleInput(e, \"description\")}\n              />\n            </Col>\n          </Form.Row>\n          <br />\n          <Form.Row>\n            <Form.Label column lg={3}>\n              Area\n            </Form.Label>\n            <Col>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Location\"\n                value={experience.area}\n                onChange={(e) => handleInput(e, \"area\")}\n              />\n            </Col>\n          </Form.Row>\n          <Button type=\"submit\" className=\"mt-3\">\n            {isEdit ? \"Save Changes\" : \"Submit\"}\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n}\nexport default Addexperience"]},"metadata":{},"sourceType":"module"}